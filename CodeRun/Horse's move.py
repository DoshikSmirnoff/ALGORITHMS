"""
4. Ход конём

Дана прямоугольная доска N × M (N строк и M столбцов).
В левом верхнем углу находится шахматный конь, которого необходимо переместить в правый нижний угол доски.
В данной задаче конь может перемещаться на две клетки вниз и одну клетку вправо или на одну клетку вниз и две клетки вправо.

Необходимо определить, сколько существует различных маршрутов, ведущих из левого верхнего в правый нижний угол.

Формат ввода
Входной файл содержит два натуральных числа N и M

Формат вывода
В выходной файл выведите единственное число — количество способов добраться конём до правого нижнего угла доски.
"""
class Desk:
    def count_of_moves(self):
        N = 8
        x = []
        y = []

        for _ in range(N):
            new_x, new_y = map(int, input().split())  # [1, 7] -> new_x = 1, new_y = 7
            x.append(new_x)
            y.append(new_y)

        if len(x) != len(set(x)):
            return "YES"
        if len(y) != len(set(y)):
            return "YES"

        for i in range(N):
            for j in range(i + 1, N):
                if abs(x[i] - x[j]) == abs(y[i] - y[j]):
                    return "YES"

        return "NO"


desk = Desk()
print(desk.count_of_moves())