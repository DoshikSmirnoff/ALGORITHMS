# Представления графов
# 1) Граф с n вершинами в виде матрицы смежности
"""
matrix_smezhnosti = [
    [0, 1, 1, 0],
    [1, 0, 1, 0],
    [1, 1, 0, 1],
    [0, 0, 1, 0]
]
"""

# 2) Граф в виде списка ребер
# Например, есть 10 вершин V = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
"""
list_rebra = [
    [5, 6],
    [2, 3],
    [7, 1],
    [8, 9],
    [0, 4],
    [5, 7]
]
"""

# Задача - представить граф в виде матрицы смежности по списку ребер
n, m = [int(s) for s in input().split()]
edges = [] # Список ребер
for i in range(m):
    v1, v2 = [int(s) for s in input().split()]
    # x, y = map(int, input().split())
    edges.append([v1, v2])

# print(edges) -> [[5, 6], [2, 3], [7, 1], [8, 9], [0, 4], [5, 7]]
ms = [[0] * n for _ in range(n)] # Матрица смежности
for (v1, v2) in edges:
    ms[v1][v2] = 1
    ms[v2][v1] = 1

for row in ms:
    print(row)

"""
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 1, 0, 0, 0, 1, 0, 0, 0, 0]
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
"""

# Задача - представить граф в виде cписка ребер по матрице смежности
edges = []

for v1 in range(n):
    for v2 in range(v1 + 1, n):
        if ms[v1][v2] == 1:
            edges.append([v1, v2])
print(edges) # [[5, 6], [2, 3], [7, 1], [8, 9], [0, 4], [5, 7]]

# Список смежности. Это список из n списков. i-ый список содержит вершины, с которыми смежна v_i
"""
c = [
    [1, 4],
    [0, 3, 4],
    [],
    [1, 4],
    [0, 1, 3]
]
"""